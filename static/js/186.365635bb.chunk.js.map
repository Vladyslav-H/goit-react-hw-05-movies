{"version":3,"file":"static/js/186.365635bb.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,IAAH,8G,6ICqDtB,UA/CgB,WACd,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAEA,IAAMK,EAAO,mCAAG,2FACdN,GAAa,GADC,mBAIOO,EAAAA,EAAAA,IAAgBN,GAJvB,QAINO,EAJM,SAKFJ,EAAWI,GALT,gDAOZC,EAAAA,GAAAA,MAAY,kDAPA,yBASZT,GAAa,GATD,4EAAH,qDAYdU,YAAW,WACRC,OAAOC,SAAS,EAAG,IACpB,GAAE,KACHN,GAjBoB,CAkBrB,GAAE,CAACL,KAGF,SAAC,IAAD,WACE,0BACGF,IAAa,SAAC,IAAD,IACbI,EAAQU,OAAS,EAChBV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,KAED,gFAKT,C,8LCpDDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAU,mCAEVC,EAAmB,WAC9B,OAAOF,EAAAA,EAAAA,IAAA,sCAC+BC,IACnCE,MAAK,SAAAC,GAAQ,OAAIA,EAASd,KAAKe,OAAlB,GACjB,EAEYC,EAAiB,SAAAC,GAC5B,OAAOP,EAAAA,EAAAA,IAAA,gCACyBC,GAAW,CACvCO,OAAQ,CACND,MAAAA,KAGHJ,MAAK,SAAAC,GAAQ,OAAIA,EAASd,KAAKe,OAAlB,GACjB,EAEYI,EAAe,SAAAZ,GAC1B,OAAOG,EAAAA,EAAAA,IAAA,iBACUH,EADV,oBACwBI,IAC5BE,MAAK,SAAAC,GAAQ,OAAIA,EAASd,IAAb,GACjB,EAEYoB,EAAkB,SAAAb,GAC7B,OAAOG,EAAAA,EAAAA,IAAA,iBACUH,EADV,4BACgCI,IACpCE,MAAK,SAAAC,GAAQ,OAAIA,EAASd,KAAKqB,IAAlB,GACjB,EAEYtB,EAAkB,SAAAQ,GAC7B,OAAOG,EAAAA,EAAAA,IAAA,iBACUH,EADV,4BACgCI,IACpCE,MAAK,SAAAC,GAAQ,OAAIA,EAASd,KAAKe,OAAlB,GACjB,EAEYO,EAAY,SAAAC,GACvB,OAAOb,EAAAA,EAAAA,IAAA,yCACkCa,IACtCV,MAAK,SAAAC,GAAQ,OAAIA,EAASU,OAAOC,GAApB,GACjB,C","sources":["components/Container/Container.styled.js","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getMovieReviews } from 'services/moviesApi';\nimport { Container } from 'components/Container/Container.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getCast = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await getMovieReviews(movieId);\n        if (data) setReviews(data);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Please, try later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n   setTimeout(() => {\n      window.scrollBy(0, 450);\n    }, 500);\n    getCast();\n  }, [movieId]);\n\n  return (\n    <Container>\n      <ul>\n        {isLoading && <Loader />}\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h5>Author: {author}</h5>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <h2>Sorry, we don`t have any reviews for this movie</h2>\n        )}\n      </ul>\n    </Container>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '6031aff1495aee0d83201b316a243945';\n\nexport const getTrendingMovie = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\n\nexport const getMovieByName = query => {\n  return axios\n    .get(`/search/movie?api_key=${API_KEY}`, {\n      params: {\n        query,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nexport const getMovieById = id => {\n  return axios\n    .get(`/movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport const getMovieCredits = id => {\n  return axios\n    .get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\n\nexport const getPoster = path => {\n  return axios\n    .get(`https://image.tmdb.org/t/p/w300${path}`)\n    .then(response => response.config.url);\n};\n"],"names":["Container","styled","useState","isLoading","setIsLoading","movieId","useParams","reviews","setReviews","useEffect","getCast","getMovieReviews","data","toast","setTimeout","window","scrollBy","length","map","id","author","content","axios","API_KEY","getTrendingMovie","then","response","results","getMovieByName","query","params","getMovieById","getMovieCredits","cast","getPoster","path","config","url"],"sourceRoot":""}
{"version":3,"file":"static/js/841.510c8302.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Container/Container.styled.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/MovieDetailsCard/MovieDatailsCard.styled.js","components/MovieDetailsCard/MovieDetailCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  max-width: 150px;\n  height: 35px;\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  color: #fff;\n  background-color: green;\n\n  font-weight: 500;\n  font-size: 16px;\n  box-shadow: 3px 5px 24px -9px rgba(0, 0, 0, 0.75);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    scale: 1.05;\n    color: green;\n    background-color: #fff;\n    border: 1px solid green;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from 'styled-components';\nimport { Container } from 'components/Container/Container.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nexport const ContainerDetPage = styled(Container)`\n  align-items: flex-start;\n`;\n\nexport const ButtonGoBack = styled(Button)`\n  margin-bottom: 40px;\n`;\n\nexport const Item = styled.li`\n  display: block;\n  color: green;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: lightgreen;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const InfoTitle = styled.h5`\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\ndisplay: flex;\nmargin-bottom: 20px;\n`\n\nexport const DescriptionContainer = styled.div`\nmargin-left: 50px;\n`\n\nexport const EmptyImage = styled.div`\n  width: 300px;\n  height: 400px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: lightgrey;\n`;","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport { CardContainer } from './MovieDatailsCard.styled';\nimport { DescriptionContainer, EmptyImage } from './MovieDatailsCard.styled';\nimport { getPoster } from 'services/moviesApi';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetailCard = ({ info }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [url, setUrl] = useState('');\n\n  const { release_date, poster_path, title, vote_average, overview, genres } =\n    info;\n\n  const date = new Date(release_date);\n  const realeaseYear = date.getFullYear();\n\n  const userScore = Math.round(vote_average * 10);\n\n  useEffect(() => {\n    if (!poster_path) return;\n\n    const getImgUrl = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getPoster(poster_path);\n        setUrl(data);\n      } catch (error) {\n        console.log(error.massege);\n        toast.error('Ooops! Something went wrong. Please, try later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getImgUrl();\n  }, [poster_path]);\n\n  return (\n    <CardContainer>\n      {isLoading && <Loader />}\n      {url ? (\n        <img src={url} alt={url} />\n      ) : (\n        <EmptyImage>Image not found</EmptyImage>\n      )}\n      <DescriptionContainer>\n        <h2>\n          {title}\n          {realeaseYear ? <span>({realeaseYear})</span> : null}\n        </h2>\n        <p>\n          User score: <span>{userScore}%</span>\n        </p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres &&\n            genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n        </ul>\n      </DescriptionContainer>\n    </CardContainer>\n  );\n};\n\nMovieDetailCard.propTypes = {\n  info: PropTypes.object.isRequired,\n};\n\nexport default MovieDetailCard;\n","import { useEffect, useState, useRef } from 'react';\nimport { TiArrowBack } from 'react-icons/ti';\nimport {\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { getMovieById } from 'services/moviesApi';\n\nimport {\n  InfoTitle,\n  Item,\n  ContainerDetPage,\n  ButtonGoBack,\n} from './MovieDetailsPage.styled';\nimport MovieDetailCard from 'components/MovieDetailsCard/MovieDetailCard';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const prevPage = useRef(location.state);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMovieById(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        toast.error('Ooops! Something went wrong. Please, try later');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [movieId]);\n\n  const goBack = () => navigate(prevPage.current);\n\n  return (\n    <ContainerDetPage>\n       <ToastContainer position=\"top-center\" theme=\"dark\" />\n      {isLoading && <Loader />}\n      <ButtonGoBack type=\"button\" onClick={goBack}>\n        <TiArrowBack /> Go back\n      </ButtonGoBack>\n      <div>\n        <MovieDetailCard info={movieInfo} />\n        <div>\n          <InfoTitle>Additional information</InfoTitle>\n          <ul>\n            <Item>\n              <Link state={prevPage} to=\"cast\">\n                Cast\n              </Link>\n            </Item>\n            <Item>\n              <Link state={prevPage} to=\"reviews\">\n                Review\n              </Link>\n            </Item>\n          </ul>\n        </div>\n      </div>\n      <Outlet />\n    </ContainerDetPage>\n  );\n};\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '6031aff1495aee0d83201b316a243945';\n\nexport const getTrendingMovie = () => {\n  return axios\n    .get(`/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\n\nexport const getMovieByName = query => {\n  return axios\n    .get(`/search/movie?api_key=${API_KEY}`, {\n      params: {\n        query,\n      },\n    })\n    .then(response => response.data.results);\n};\n\nexport const getMovieById = id => {\n  return axios\n    .get(`/movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport const getMovieCredits = id => {\n  return axios\n    .get(`/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return axios\n    .get(`/movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\n\nexport const getPoster = path => {\n  return axios\n    .get(`https://image.tmdb.org/t/p/w300${path}`)\n    .then(response => response.config.url);\n};\n"],"names":["Button","styled","Container","ContainerDetPage","ButtonGoBack","Item","InfoTitle","CardContainer","DescriptionContainer","EmptyImage","info","useState","isLoading","setIsLoading","url","setUrl","release_date","poster_path","title","vote_average","overview","genres","realeaseYear","Date","getFullYear","userScore","Math","round","useEffect","getImgUrl","getPoster","data","console","log","massege","toast","Loader","src","alt","map","id","name","movieId","useParams","movieInfo","setMovieInfo","navigate","useNavigate","location","useLocation","prevPage","useRef","state","getMovies","getMovieById","position","theme","type","onClick","current","to","axios","API_KEY","getTrendingMovie","then","response","results","getMovieByName","query","params","getMovieCredits","cast","getMovieReviews","path","config"],"sourceRoot":""}